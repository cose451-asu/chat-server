akka {
  http.server.preview.enable-http2 = on

  actor {
    provider = "cluster"
  }

  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://chat-actor-system@127.0.0.1:2551"
    ]
  }

  persistence {
    journal {
      plugin = "jdbc-journal"
      // Enable the line below to automatically start the journal when the actorsystem is started
      // auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      // Enable the line below to automatically start the snapshot-store when the actorsystem is started
      // auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "localhost"
    host = ${?COCKROACH_HOST}
    user = "chatserver"
    user = ${?COCKROACH_USER}
    database = "chat"
    database = ${?COCKROACH_DATABASE}
    port = 26257
    port = ${?COCKROACH_PORT}
    certs-dir = ${HOME}/".cockroach-certs"
    certs-dir = ${?COCKROACH_CERTS_DIR}
    url = "jdbc:postgresql://"${slick.db.host}":"${slick.db.port}"/"${slick.db.database}"?user="${slick.db.user}"&reWriteBatchedInserts=true&sslmode=require&sslrootcert="${slick.db.certs-dir}"/ca.crt&sslcert="${slick.db.certs-dir}"/client."${slick.db.user}".crt&sslkey="${slick.db.certs-dir}"/client."${slick.db.user}".pk8"
    connectionTestQuery = "SELECT 1" // postgres doesn't support connection timeout
    driver = "org.postgresql.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}

chat-server {
  grpc-port = 9000
  grpc-port = ${?CHAT_GRPC_PORT}

  jwt-secret-key = "test-jwt-secret-key"
  jwt-secret-key = ${?CHAT_JWT_SECRET_KEY}

  access-token-expiry-minutes = 60
  refresh-token-expiry-minutes = 129600 // 90 days

  // If you don't want to use TLS, don't set envs below.
  tls-key-cert-chain-file = "" // an X.509 certificate chain file in PEM format
  tls-key-cert-chain-file = ${?CHAT_TLS_CERT_CHAIN_FILE}

  tls-key-file = "" // a PKCS#8 private key file in PEM format
  tls-key-file = ${?CHAT_TLS_KEY_FILE}
}
